plot(dose,drugA, type="b", pch=15,lty=1, col="red", ylim=c(0,60), main="DrugA vs DrugB",
xlab="Drug Dosage", ylab="Drug response")
lines(dose, drugB, type="b", pch=17, lty=2,col="blue")
abline(h=c(30), lwd =1.5, lty=2, col="gray")
library(Hmisc)
minor.tick(nx=3,ny=3, tick.ratio=0.05)
legend("topleft", inset=.05, title="Drug Type", legend=c("A","B"),
lty = c(1,2), pch = c(15,17),col=c("red","blue"))
attach(mtcars)
plot(wt,mpg,main="Milage vs Car Weight", xlab= "Weight", ylab="Milage", pch=18,col="blue")
text(wt,mpg,row.names(mtcars), cex=0.6,  post=4, col="red")
attach(mtcars)
plot(wt,mpg,main="Milage vs Car Weight", xlab= "Weight", ylab="Milage", pch=18,col="blue")
text(wt,mpg,row.names(mtcars), cex=0.6,  post=, col="red")
text(wt,mpg,row.names(mtcars), cex=0.6,  post=4, col="red")
attach(mtcars)
plot(wt,mpg,main="Milage vs Car Weight", xlab= "Weight", ylab="Milage", pch=18,col="blue")
text(wt,mpg,row.names(mtcars), cex=0.6,  pos=4, col="red")
detach(mtcars)
par()
opar <- par(no.readonly=TRUE)
par(ylbias=0.3)
par()
par(par(ylbias=0.3))
par()
o <- par(ylbias=0.5)
par()
par(o)
par()
o <- par(ylbias=0.2)
par()
par(o)
par()
o <- par(ylbias=0.2)
o<- par(nno.readonly = TRUE)
par(ylbias=0.4)
par()
par(o)
par(O)
par(o)
par(ylbias=0.2)
par()
o<- par(no.readonly = TRUE)
par(ylbias=0.5)
par()
par(o)
par()
swirl()
library(swirl)
swirl()
head(sub1)
mdist <- dist(sub1[,10:12])
hclustering <- hclust(mdist)
myplclust
myplclust(hclustring, lab.col = unclass(sub1$activity))
myplclust(hclustering, lab.col = unclass(sub1$activity))
sv1 <- svd(scale(sub1[,-c(562,563)]))
svd1 <- svd(scale(sub1[,-c(562,563)]))
dim(svd1$u)
dim(svd1$v)
maxCon <- which.max(svd1$v[,2])
mdist <- dist(sub1[, c(10:12,maxCon)])
head(svd1$v[,2])
names(sub1[,2])
names(svb1$v[2, ])
names(svb1$v[, 2])
names(svd1$v[, 2])
names(svd1$v[2, ])
maxCon <- which.max(svd1$v[,1])
maxCon
maxCon <- which.max(svd1$v[,2])
maxCon
maxCon <- which.max(svd1$v[,1])
maxCon
maxCon <- which.max(svd1$v[,3])
maxCon
maxCo <- which.max(svd1$v[,3])
maxCo
maxCo <- which.max(svd1$v[,1])
maxCo
mdist <- dist(sub1[, c(10:12,maxCo)])
mdis <- dist(sub1[, c(10:12,maxCo)])
hclustering <- hclust(mdis)
hclusterin <- hclust(mdis)
myplclust(hclustrin, lab.col = unclass(sub1$activity))
hclusterin <- hclust(mdis)
myplclust(hclustrin, lab.col = unclass(sub1$activity))
hhclustering <- hclust(mdist)
hclustering <- hclust(mdist)
myplclust(hclustring, lab.col=unclass(sub1$activity))
myplclust(hclustering, lab.col=unclass(sub1$activity))
names(sub1[maxCon])
help()
skip()
skip()
skip(0)
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
library(swirl)
swirl()
x0
boxplot(log10(x0), log10(x1)
boxplot(log10(x0), log10(x1))
negative <- x1<0
sum(negative, nar.rm=TRUE)
sum(negative, na.rm=TRUE)
mean(negative, nar.rm=TRUE)
mean(negative, na.rm=TRUE)
swirl()
library(swirl)
swirl()
datas <-  pm1$Date
dates <-  pm1$Date
dates <- pm1$Date
dates <-  pm1$Date
dates <- pm1$Date
dates <- pm1$Date
nxt()
dates <- pm1$Date
help()
date2 <- pm1$v2
info()
skip()
skip()
skip()
main()
date2 <- pm1$v2
dates <- pm1$Date
dates <- pm1$Date
main()
dim(pm0)
head(pm0)
colnames(cnames)
cnames
cnames <- strsplit(cnames,"|", fixed=true)
cnames <- strsplit(cnames,"|", fixed=TRUE)
cnames
names(pm0) <- make.names(cnames[[1]][wcol])
head(pm0)
canmes[[1]][wcol]
cnames[[1]][wcol]
x0 <- pm0$Sample.Value
str(x0)
mean(is.na(x0))
names(pm1) <- make.names(cnames[[1]][wcol])
dim(pm1)
x1 <- pm1$Sample.Value
mean(is.na(x1))
summary(x0)
summary(x1)
boxplot(x0,x1)
boxplot(log10(x0), log10(x1))
negative <- x1<0
negative
sum(negative, na.rm=TRUE)
mean(negative, na.rm=TRUE)
dates <- pm1$Date
str(dates)
date <- as.date(as,character(dates), %Y%m%d)
library("swirl()")
library("swirl")
library("swirl()")
library("swirl")
swirl()
swirl()
6
swirl()
dim(pm0)
head(pm0)
cnames
cnames <- strsplit(cnames, "1", fixed=TRUE)
cnames <- strsplit(cnames, "|", fixed = TRUE)
cnames <- strsplit(cnames, "|", fixed = TRUE)
cnames
cnames <-strsplit(cnames,"|",fixed=TRUE)
cnames <- strsplit(cnames, "|", fixed = TRUE)
main()
dim(pm0)
head(pm0)
canmes
cnames
cnames <- strsplit(cnames, "|", fixed=TRUE)
cnames
names(pm0) <- make.names(cnames[[1]][wcol])
head(pm0)
x0 <- pm0$Sample.Value
str(x0)
mean(is.na(x0))
names(p1) <- make.names(cnames[[1]][wcoll])
names(pm1) <- make.names(cnames[[1]][wcoll])
names(pm1) <- make.names(cnames[[1]][wcol])
dim(pm1)
x1 <- pm1$Sample.Value
mean(is.na(x1))
summary(x0)
summary(x1)
boxplot(x0,x1)
boxplot(log10(x0),log10(x1))
negative <- x1<0
sum(negative, na.rm = TRUE)
mean(negative, na.rm = TRUE)
dates <- pm1$Date
str(dates)
str(dates)
dates <- as.Date(as.character(dates), "%Y%m%d")
head(dates)
?hist
hist(dates[negative],breaks="month")
str(site0)
intersect(site0,site1)
both <- instersect(site0,site1)
both <- intersect(site0,site1)
both
head(pm0)
cnt0 <- subset(pm0, State.code==36&country.site%in%both)
cnt0 <- subset(pm0, State.Code==36&country.site%in%both)
cnt0 <- subset(pm0, State.Code==36&county.site%in%both)
cnt1 <- subset(pm1, State.Code==36&county.site%in%both)
sapply(split(cnt0,cnt0$county.site))
sapply(split(cnt0,cnt0$county.site),nrow)
sapply(split(cnt1,cnt1$county.site),nrow)
pm0sub <- subset(cnt0,County.Code==63&Site.ID==2008)
pm1sub <- subset(cnt1,County.Code==63&Site.ID==2008)
x0sub <- pm0sub <- Sample.Value
x0sub <- pm0sub$Sample.Value
x1sub <- pm1sub$Sample.Value
dates <- as.Date(as.character(pm0$Date),%Y%m%d)
dates <- as.Date(as.character(pm0$Date),"%Y%m%d")
dates0 <- as.Date(as.character(pm0$Date),"%Y%m%d")
dates0 <- as.Date(as.character(pm0sub$Date),"%Y%m%d")
dates1 <- as.Date(as.character(pm1sub$Date),"%Y%m%d")
par(mfrow=c(1,2), mar=c(4,4,2,1))
plot(dates0,x0sub, pch==20)
plot(dates0,x0sub, pch=20)
abline(median(x0sub),na.rm)
abline(median(x0sub),na.rm=TRUE)
abline(median(x0sub,na.rm=TRUE),lwd-2)
abline(median(x0sub,na.rm=TRUE),lwd=2)
abline(h=median(x0sub,na.rm=TRUE),lwd=2)
plot(dates1,x1sub, pch=20)
abline(h=median(x1sub,na.rm=TRUE),lwd=2)
rng <- range(x0sub,x1sub,na.rm=TRUE)
rng
with
?wiht
?with
?tapply
mn0 <- with(pm0, tapply(Sample.Value, State.Code, mean,na.rm=TRUE))
str(mn0)
mn1 <- with(pm1, tapply(Sample.Value, State.Code, mean,na.rm=TRUE))
str(mn1)
summary(mn0)
summary(mn1)
d0 <- data.frame(state=names(mn0),mean=mn0)
d <- data.frame(state=names(mn1),mean=mn1)
d1 <- data.frame(state=names(mn1),mean=mn1)
mrg <- merge(d0,d1, by="state")
head(mrg)
d1
dim(mrg)
head(mrg)
?rep
rep(1:4, each = 2)
rep(1:4, 2)
with(mrg,plot(rep(1,52),marg[,2],xlim=c(.5,2.5)))
with(mrg,plot(rep(1,52),mrg[,2],xlim=c(.5,2.5)))
points(rep(2,52), mrg[,3])
with(mrg, points(rep(2,52), mrg[,3]))
segments(rep(1,52), mrg[,2], rep(2,52), mrg(,3))
with(mrg,segments(rep(1,52), mrg[,2], rep(2,52), mrg(,3)))
skip()
mrg[mrg$mean.x < mrg$mean.y]
mrg[mrg$mean.x < mrg$mean.y,]
rm(list=ls(all=TRUE))
library(RSelenium )
checkForServer()
startServer()
mybrowser <- remoteDriver()
mybrowser
mybrowser$open()
startServer()
mybrowser <- remoteDriver()
mybrowser$open()
library(RCurl)
library(RJSONIO)
library(XML)
startServer()
mybrowser <- remoteDriver()
mybrowser$open()
system("java -jar selenium-server-standalone-2.44.0.jar")
WebDriver driver;
System.setProperty("webdriver.gecko.driver", "<Path to your WebDriver>");
driver =new FirefoxDriver();
install.packages("RDCOMClient")
u <- "http://www.ebay.com/sch/i.html?_from=R40&_sacat=0&_nkw=iphone%20case&_pppn=r1&scp=ce0"
ie <- COMCreate("InternetExplorer.Application")
ie$Navigate(u)
library(RDCOMClient)
u <- "http://www.ebay.com/sch/i.html?_from=R40&_sacat=0&_nkw=iphone%20case&_pppn=r1&scp=ce0"
ie <- COMCreate("InternetExplorer.Application")
ie$Navigate(u)
library(RDCOMClient)
u <- "http://www.ebay.com/sch/i.html?_from=R40&_sacat=0&_nkw=iphone%20case&_pppn=r1&scp=ce0"
ie <- COMCreate("InternetExplorer.Application")
ie$Navigate(u)
txt <- list()
txt[[u]] <- ie[["document"]][["body"]][["innerText"]]
ie$Quit()
print(txt)
ie
ie <- COMCreate("InternetExplorer.Application")
ie$Navigate(u)
txt <- list()
txt[[u]] <- ie[["ul"]]]
txt[[u]] <- ie[["ul"]]
txt <- list()
txt[[u]] <- ie[["ul"]]
ie$Quit()
require(RSelenium)
extraCapabilities <- list("browser" = "IE",
"browserstack.debug" = "true")
remDr <- remoteDriver$new(remoteServerAddr = ip, port = port
, extraCapabilities = extraCapabilities)
remDr <- remoteDriver$new( extraCapabilities = extraCapabilities)
remDr
startServer()
mybrowser <- remoteDriver()
mybrowser$open()
devtools::install_github("ropensci/RSelenium")
vignette('RSelenium-basics')
html <-read_html("http://www.ebay.com/sch/i.html?_from=R40&_sacat=0&_nkw=iphone%20case&_pppn=r1&scp=ce0")
webElem <- remDr$findElement('html', "//ul")
webElem <- remDr$findElement('html', "//li")
webElem <- remDr$findElement('html')
webElem <- remDr$findElement('html',//div[@class='answer'])
webElem <- remDr$findElement('html',"//div[@class='answer']")
require(RSelenium)
require(RSelenium)
require(RSelenium)
remDr <- remoteDriver(remoteServerAddr = "localhost"
, port = 4445L
, browserName = "firefox"
)
docker-machine ip
docker-machine
remDr$open()
checkForServer()
install.packages("digest")
install.packages("digest")
activity
mean.steps
activity <- read.csv("activity.csv", stringsAsFactors = FALSE)
activity[,2] <- as.Date(activity[,2], "%Y-%m-%d")
str(activity)
activity
sum.steps <- aggregate(x = activity[, 1], by=list(activity[, 2]), FUN=(function(x) sum(x, na.rm = FALSE)))
head(sum.steps)
hist(sum.steps[, 2],breaks=10, main="Frequency of Step Taken",xlab="Steps taken per day")
mean.sum.steps <- mean(sum.steps[,2], na.rm=TRUE)
print(mean.sum.steps)
median.sum.steps <- median(sum.steps[,2], na.rm=TRUE)
print(median.sum.steps)
mean.steps <- aggregate(x = activity[, 1], by=list(activity[, 2]), FUN=(function(x) mean(x, na.rm = FALSE)))
plot(mean.steps[, 1], mean.steps[,2], type="l", xlab = "Day", ylab = "Steps Taken", main = "Steps Taken Each Day")
activity[which.max(activity[,1]), 3]
sapply(activity, function(x) sum(is.na(x)))
mean.steps[is.na(mean.steps[,2]),][,2] <- mean(mean.steps[,2], na.rm=TRUE)
mean.steps
for (i in 1:nrow(activity)) {
if(is.na(activity[i, 1])){
activity[i, 1] <- mean.steps[which(mean.steps[1,]==activity[i, 2]), 2]
}
}
activity
str(mean.steps)
str(activity)
mean.steps
activity <- read.csv("activity.csv", stringsAsFactors = FALSE)
activity[,2] <- as.Date(activity[,2], "%Y-%m-%d")
str(activity)
for (i in 1:nrow(activity)) {
if(is.na(activity[i, 1])){
activity[i, 1] <- mean.steps[which(mean.steps[1,1]==activity[i, 2]), 2]
}
}
mean.steps
for (i in 1:nrow(activity)) {
if(is.na(activity[i, 1])){
activity[i, 1] <- mean.steps[which(mean.steps[1,1]==activity[i, 2]), 2]
}
}
mean.steps
for (i in 1:nrow(activity)) {
if(is.na(activity[i, 1])){
activity[i, 1] <- mean.steps[which(mean.steps$Group.1==activity[i, 2]), 2]
}
}
activity
activity <- read.csv("activity.csv", stringsAsFactors = FALSE)
activity <- read.csv("activity.csv", stringsAsFactors = FALSE)
activity[,2] <- as.Date(activity[,2], "%Y-%m-%d")
clean.activity <- activity
clean.activity
clean.activity <- activity
for (i in 1:nrow(clean.activity)) {
if(is.na(clean.activity[i, 1])){
clean.activity[i, 1] <- mean.steps[which(mean.steps$Group.1==clean.activity[i, 2]), 2]
}
}
clean.activity
head(clean.activity)
sum.clean.steps <- aggregate(x = clean.activity[, 1], by=list(clean.activity[, 2]), FUN=(function(x) sum(x, na.rm = FALSE)))
hist(sum.clean.steps, breaks = 100)
sum.clean.steps
hist(sum.clean.steps[,2], breaks = 100)
hist(sum.clean.steps[,2], breaks = 10)
hist(sum.clean.steps[,2], breaks = 10, main="Frequency of Step Taken",xlab="Steps taken per day")
mean.sum.clean.steps <- mean(sum.clean.steps[,2], na.rm=TRUE)
print(mean.sum.clean.steps)
median.sum.clean.steps <- median(sum.clean.steps[,2], na.rm=TRUE)
print(median.sum.clean.steps)
mean
mean.sum.clean.steps <- mean(sum.clean.steps[,2], na.rm=TRUE)
print(mean.sum.clean.steps)
median.sum.clean.steps <- median(sum.clean.steps[,2], na.rm=TRUE)
print(median.sum.clean.steps)
clean.activity$weekdays <- weekdays(clean.activity$date)
clean.activity
str(clean.activity)
?weekdays
clean.activity <- activity
for (i in 1:nrow(clean.activity)) {
if(is.na(clean.activity[i, 1])){
clean.activity[i, 1] <- mean.steps[which(mean.steps$Group.1==clean.activity[i, 2]), 2]
}
}
clean.activity$weekdays <- factor(weekdays(clean.activity), levels = c(FALSE, TRUE), lables=c("weekend", "weekday"))
clean.activity$weekdays <- factor(weekdays(clean.activity), levels = c(FALSE, TRUE), labels=c("weekend", "weekday"))
wdays<- c('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday')
clean.activity$weekdays <- factor((weekdays(clean.activity) %in% wdays), levels = c(FALSE, TRUE), labels=c("weekend", "weekday"))
clean.activity$weekdays <- factor((weekdays(clean.activity$date) %in% wdays), levels = c(FALSE, TRUE), labels=c("weekend", "weekday"))
clean.activity
clean.activity
qplot(steps, date, data=clean.activity, facets=weekdays~.)
require(ggplot2)
qplot(steps, date, data=clean.activity, facets=weekdays~.)
require(ggplot2)
install.packages("ggplot2")
require(ggplot2)
qplot(steps, date, data=clean.activity, facets=weekdays~.)
library(ggplot2)
install.packages("colorspace")
qplot(steps, date, data=clean.activity, facets=weekdays~.)
library(ggplot2)
qplot(steps, date, data=clean.activity, facets=weekdays~.)
qplot(date, steps, data=clean.activity, facets=weekdays~.)
qplot(date, steps, data=clean.activity, facets=weekdays~., typle="l")
qplot(date, steps, data=clean.activity, facets=weekdays~.,geom = "line")
qplot(date, steps, data=clean.activity, facets=weekdays~.,geom = "smooth")
qplot(date, steps, data=clean.activity, facets=weekdays~.,geom = "lines")
qplot(date, steps, data=clean.activity, facets=weekdays~.,geom = "line")
qplot(interval, steps, data=clean.activity, facets=weekdays~.,geom = "line")
?knock2html
?knock2html()
?knit2html
knit2html("PA1_template.Rmd")
library(knit)
library(knitr)
knit2html("PA1_template.Rmd")
setwd("C:/Users/Bruce/Dropbox/1.R/5.research/RepData_PeerAssessment1")
getwd()
knit2html("PA1_template.Rmd")
knit2html("PA1_template.Rmd")
knit2html("PA1_template.Rmd")
knit2html("PA1_template.Rmd")
knit("PA1_template.Rmd")
knit2html("PA1_template.Rmd")''
knit2html("PA1_template.Rmd")
knit("PA1_template.Rmd")
knit("PA1_template.Rmd")
knit("PA1_template.Rmd")
knit("PA1_template.Rmd")
knit2html("PA1_template.md")''
knit2html("PA1_template.md")
require(ggplot2)
require(ggplot2)
knit("PA1_template.Rmd")
mean.steps
require(ggplot2)
mean.clean.steps <- aggregate(x = clean.activity$steps, by=list(clean.activity$date, clean.activity$weekdays), FUN=(function(x) mean(x, na.rm = FALSE)))
mean.clean.steps
View(mean.clean.steps)
clean.activity
str(mean.clean.steps)
mean.clean.steps <- aggregate(x = clean.activity$steps, by=list(clean.activity$date), FUN=(function(x) mean(x, na.rm = FALSE)))
View(mean.clean.steps)
, clean.activity$weekdays
mean.clean.steps <- aggregate(x = clean.activity$steps, by=list(clean.activity$date, clean.activity$weekdays), FUN=(function(x) mean(x, na.rm = FALSE)))
mean.clean.steps
mean.clean.steps <- aggregate(x = clean.activity$steps, by=list(clean.activity$date), FUN=(function(x) mean(x, na.rm = FALSE)))
mean.clean.steps$weekdays <- factor((weekdays(mean.clean.steps$Group.1) %in% wdays), levels = c(FALSE, TRUE), labels=c("weekend", "weekday"))
mean.clean.steps
qplot(interval, steps, data=mean.clean.steps, facets=weekdays~.,geom = "lin
qplot(interval, steps, data=mean.clean.steps, facets=weekdays~.,geom = "line")
mean.clean.steps
qplot(x, Group.1, data=mean.clean.steps, facets=weekdays~.,geom = "line")
