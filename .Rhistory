setwd("~/Dropbox/1.R/5.research/RepData_PeerAssessment1")
read.csv("active.csv", stringsAsFactors = FALSE)
read.csv(active.csv, stringsAsFactors = FALSE)
ls
list.files()
read.csv(activity.csv)
read.csv("activity.csv")
c<-read.csv("activity.csv")
str(c)
c<-read.csv("activity.csv",stringsAsFactors = FALSE)
str(c)
View(c)
activity <- read.csv("activity.csv", stringsAsFactors = FALSE)
activity <- read.csv("activity.csv", stringsAsFactors = FALSE)
sapply(activity function sum(is.na(x)))
sapply(activity, function sum(is.na(x)))
activity <- read.csv("activity.csv", stringsAsFactors = FALSE)
sapply(activity, function sum(is.na(x)))
activity <- read.csv("activity.csv", stringsAsFactors = FALSE)
sapply(activity, function sum(is.na(x)))
activity <- read.csv("activity.csv", stringsAsFactors = FALSE)
sapply(activity, function(x) sum(is.na(x)))
activity <- read.csv("activity.csv")
sapply(activity, function(x) sum(is.na(x)))
??na
tapply(activity[,1],activiy[,2],mean, na.rm=TRUE)
tapply(activity[,1],activiy[,2],mean(na.rm=TRUE))
tapply(activity[,1],activiy[,2],function(x) mean(x, na.rm = TRUE))
tapply(activity[,1],activity[,2],function(x) mean(x, na.rm = TRUE))
mean <- tapply(activity[,1],activity[,2],function(x) mean(x, na.rm = TRUE))
msteps<- tapply(activity[,1],activity[,2],function(x) mean(x, na.rm = TRUE))
msteps
str(msteps)
msteps<- as.dataframe(tapply(activity[,1],activity[,2],function(x) mean(x, na.rm = TRUE)))
msteps
msteps<- as.dataframe(tapply(activity[,1],activity[,2],function(x) mean(x, na.rm = TRUE)))
msteps<- as.data.frame(tapply(activity[,1],activity[,2],function(x) mean(x, na.rm = TRUE)))
View(msteps)
msteps<- as.data.frame(tapply(activity[,1],activity[,2],function(x) mean(x)))
msteps
msteps<- as.data.frame(tapply(activity[,1],activity[,2],mean)
msteps
msteps
msteps<- as.data.frame(tapply(activity[,1],activity[,2],mean)
msteps
View(msteps)
function(x) mean(x))
msteps<- as.data.frame(tapply(activity[,1],activity[,2],function(x) mean(x, na.rm=TRUE)))
msteps
install.packages("tibble")
c <- 1:3
c
c <- na
c[4]<-na
c
b <c[1,2,3,NA]
b <-c[1,2,3,NA]
b <-v[1,2,3,NA]
b <-c(1,2,NA)
b
mean(b)
mean(b, na.rm=TRUE)
str(activity)
?hist
ssteps <- tapply(activity[, 1], activity[,2], sum)
ssteps
ssteps <- tapply(activity[, 1], activity[,2], function(x) sum(x, na.rm=TRUE))
ssteps
ssteps <- as.data.frame(tapply(activity[, 1], activity[,2], function(x) sum(x, na.rm=TRUE)))
ssteps
ssteps
ssteps
ssteps <- data.frame(tapply(activity[, 1], activity[,2], function(x) sum(x, na.rm=TRUE)))
ssteps
View(msteps)
library(tibble)
install.packages("tibble")
library(tibble)
ssteps <- data.frame(tapply(activity[, 1], activity[,2], function(x) sum(x, na.rm=TRUE)))
View(ssteps)
ssteps
ssteps <- data.frame(tapply(activity[, 1], activity[,2], function(x) sum(x, na.rm=TRUE)))
ssteps
print(ssteps）
View(activity)
print(ssteps）
print(ssteps）
ssteps
msteps
install.packages("tibble")
print(sstep)
print(ssteps)
sum.steps <- data.frame(tapply(activity[, 1], activity[,2], function(x) sum(x, na.rm=TRUE)))
hist(sum.steps[,2],break=sum.steps[,1])
hist(sum.steps[,2],breaks=sum.steps[,1])
str(sum.steps)
str(sum.st)
str(sum.steps)
activity <- read.csv("activity.csv", stringsAsFactors = FALSE)
activity[,2] <- format(activity[,2], "YYYY%MM%DD")
str(activity)
activity
activity[,2] <- format(activity[,2], "y%B%d")
activity[,2] <- as.Date(activity[,2], "y%B%d")
str(activity)
activity
activity <- read.csv("activity.csv", stringsAsFactors = FALSE)
View(ssteps)
as.Date(activity[,2], "y%B%d")
activity[,2] <- format(activity[,2], "y%B%d")
activity <- read.csv("activity.csv", stringsAsFactors = FALSE)
activity[,2] <- format(activity[,2], "%y %B %d")
activity[,2] <- as.Date(activity[,2], "%y %B %d")
str(activity)
activity
activity <- read.csv("activity.csv", stringsAsFactors = FALSE)
activity[,2]
activity[,2] <- as.Date(activity[,2], "%y%B%d")
str(activity)
activity <- read.csv("activity.csv", stringsAsFactors = FALSE)
as.Date(activity[,2], "%y%B%d")
activity <- read.csv("activity.csv", stringsAsFactors = FALSE)
format(activity[,2], "%y%B%d")
?format
as.Date(activity[,2], "%y%B%d")
activity
activity[,2] <- as.Date(activity[,2], "%y-%B-%d")
str(activity)
activity
activity[,2] <- as.Date(activity[,2], "%y-%b-%d")
activity <- read.csv("activity.csv", stringsAsFactors = FALSE)
activity[,2] <- as.Date(activity[,2], "%y-%b-%d")
str(activity)
activity
activity <- read.csv("activity.csv", stringsAsFactors = FALSE)
activity[,2] <- as.Date(activity[,2], "%y-%m-%d")
str(activity)
activity
activity <- read.csv("activity.csv", stringsAsFactors = FALSE)
str(activity)
str(activity)
activity <- read.csv("activity.csv", stringsAsFactors = FALSE)
activity[,2] <- as.Date(activity[,2], "%Y-%m-%d")
str(activity)
activity
activity <- read.csv("activity.csv", stringsAsFactors = FALSE)
activity[,2] <- as.Date(activity[,2], "%Y-%m-%d")
str(activity)
activity
activity <- read.csv("activity.csv", stringsAsFactors = FALSE)
activity[,2] <- as.Date(activity[,2], "%Y%m%d")
str(activity)
activity <- read.csv("activity.csv", stringsAsFactors = FALSE)
activity[,2] <- as.Date(activity[,2], "%Y%m%d")
str(activity)
activity <- read.csv("activity.csv", stringsAsFactors = FALSE)
activity[,2] <- as.Date(activity[,2], "%Y/%m/%d")
str(activity)
activity <- read.csv("activity.csv", stringsAsFactors = FALSE)
activity[,2] <- as.Date(activity[,2], "%Y-%m-%d")
str(activity)
activity
sum.steps <- aggregate(x = activity[, 1], by=list(activity[, 2], fun=function(x) sum(x, na.rm = FALSE) ))
sum.steps <- aggregate(x = activity[, 1], by=list(activity[, 2], FUN=function(x) sum(x, na.rm = FALSE) ))
sum.steps <- aggregate(x = activity[, 1], by=list(activity[, 2], FUN=(function(x) sum(x, na.rm = FALSE)) ))
sum.steps <- aggregate(x = activity[, 1], by=list(activity[, 2]), FUN=(function(x) sum(x, na.rm = FALSE)) )
sum.steps
sum.steps <- aggregate(x = activity[, 1], by=list(activity[, 2]), FUN=(function(x) sum(x, na.rm = FALSE)), na.rm=TRUE )
sum.steps <- aggregate(x = activity[, 1], by=list(activity[, 2]), FUN=(function(x) sum(x)))
sum.steps <- aggregate(x = activity[, 1], by=list(activity[, 2]), FUN=(function(x) sum(x, na.rm = FALSE)))
str(sum.steps)
sum.steps <- aggregate(x = activity[, 1], by=list(activity[, 2]), FUN=(function(x) sum(x, na.rm = FALSE)))
install.packages("tibble")
sum.steps <- aggregate(x = activity[, 1], by=list(activity[, 2]), FUN=(function(x) sum(x, na.rm = FALSE)))
hist(sum.steps[,2],breaks=sum.steps[,1])
sum.steps <- aggregate(x = activity[, 1], by=list(activity[, 2]), FUN=(function(x) sum(x, na.rm = FALSE)))
sum.steps <- aggregate(x = activity[, 1], by=list(activity[, 2]), FUN=(function(x) sum(x, na.rm = FALSE)))
str(sum.steps)
head(sum.steps)
install.packages("tibble")
sum.steps <- aggregate(x = activity[, 1], by=list(activity[, 2]), FUN=(function(x) sum(x, na.rm = FALSE)))
library(tibble)
install.packages("tibble")
install.packages("tibble")
sum.steps <- aggregate(x = activity[, 1], by=list(activity[, 2]), FUN=(function(x) sum(x, na.rm = FALSE)))
head(sum.steps)
str(sum.steps)
sum.steps
install.packages("tibble")
install.packages("dplyr")
head(sum.steps)
sum.steps <- aggregate(x = activity[, 1], by=list(activity[, 2]), FUN=(function(x) sum(x)))
sum.steps <- aggregate(x = activity[, 1], by=list(activity[, 2]), FUN=(function(x) sum(x, na.rm = FALSE)))
sum.steps <- aggregate(x = activity[, 1], by=list(activity[, 2]), FUN=(function(x) sum(x, na.rm = FALSE)))
hist(sum.steps[,2],breaks=sum.steps[,1])
sum.steps <- aggregate(x = activity[, 1], by=list(activity[, 2]), FUN=(function(x) sum(x, na.rm = FALSE)))
hist(sum.steps[,2],breaks=sum.steps[,1])
sum.steps <- aggregate(x = activity[, 1], by=list(activity[, 2]), FUN=(function(x) sum(x, na.rm = FALSE)))
hist(sum.steps[,2],breaks=sum.steps[,1])
head(sum.steps)
sum.steps <- aggregate(x = activity[, 1], by=list(activity[, 2]), FUN=(function(x) sum(x)))
head(sum.steps)
sum.steps <- aggregate(x = activity[, 1], by=list(activity[, 2]), FUN=(function(x) sum(x, na.rm = FALSE)))
head(sum.steps)
hist(sum.steps[,2],breaks=sum.steps[,1])
hist(sum.steps)
hist(sum.steps[, 2])
?hist
hist(sum.steps[, 2], breaks=sum.steps[,1])
hist(sum.steps[, 2], breaks=100)
hist(sum.steps[, 2], breaks=1000)
title("Distribution")
hist(sum.steps[, 2])
title("Distribution")
text("Distribution")
hist(sum.steps[, 2], xlab=Steps taken per day)
hist(sum.steps[, 2], xlab="Steps taken per day"")
hist(sum.steps[, 2], xlab="Steps taken per day")
hist(sum.steps[, 2], xlabs="Steps taken per day")
hist(sum.steps[, 2], xlab="Steps taken per day")
hist(sum.steps[, 2],breaks=20,xlab="Steps taken per day")
hist(sum.steps[, 2],breaks=10,xlab="Steps taken per day")
hist(sum.steps[, 2],breaks=10,na.rm=TRUE,xlab="Steps taken per day")
hist(sum.steps[, 2],breaks=10,title="Frequency of Step Taken",xlab="Steps taken per day")
hist(sum.steps[, 2],breaks=10,title="Frequency of Step Taken",xlab="Steps taken per day")
hist(sum.steps[, 2],breaks=10, main="Frequency of Step Taken",xlab="Steps taken per day")
hist(sum.steps[, 2],breaks=10, main="Frequency of Step Taken",xlab="Steps taken per day")
hist(sum.steps[, 2],breaks=10, main="Frequency of Step Taken",xlab="Steps taken per day")
hist(sum.steps[, 2],breaks=10, main="Frequency of Step Taken",xlab="Steps taken per day")
sum.steps
mean.sum.steps <- mean(sum.steps, na.rm=TRUE)
mean.sum.steps <- mean(sum.steps[,2], na.rm=TRUE)
print(mean.sum.steps)
median.sum.steps <- median(sum.steps[,2], na.rm=TRUE)
print(median.sum.steps)
head(sum.steps)
mean.steps <- aggregate(x = activity[, 1], by=list(activity[, 2]), FUN=(function(x) mean(x, na.rm = FALSE)))
plot(mean.steps[, 1], mean.steps[,2])
plot(mean.steps[, 1], mean.steps[,2], type="l")
plot(mean.steps[, 1], mean.steps[,2], type="l", xlab = "Day", ylab = "Steps Taken", main = "Steps Taken Each Day")
activity[which.max(activity[,1]), 3]
mean.steps
mean.mean.steps <- mean(mean.steps, na.rm=TRUE)
mean.steps[is.na(mean.steps[,2]),]
mean(mean.steps[,2], na.rm=TRUE)
mean.steps[is.na(mean.steps[,2]),] <- mean(mean.steps[,2], na.rm=TRUE)
mean.steps[is.na(mean.steps[,2]),][,2]
mean.steps[is.na(mean.steps[,2]),][,2] <- mean(mean.steps[,2], na.rm=TRUE)
mean.steps
for (i in 1:nrow(activity)) {
if(is.na(activity[i, 1])){
activity[i, 1] <- mean.steps[activity[i, 2], 2]
}
}
activity
View(activity)
activity[i, 1] <- mean.steps[activity[1, 2], 2]
mean.steps[activity[1, 2], 2]
mean.steps
View(mean.steps)
for (i in 1:nrow(activity)) {
if(is.na(activity[i, 1])){
activity[i, 1] <- mean.steps[activity[1, 2], 2]
}
for (i in 1:nrow(activity)) {
if(is.na(activity[i, 1])){
activity[i, 1] <- mean.steps[activity[1, 2], 2]
}
}
activity
for (i in 1:nrow(activity)) {
if(is.na(activity[i, 1])){
activity[i, 1] <- mean.steps[activity[1, 2], 2]
}
}
for (i in 1:nrow(activity)) {
if(is.na(activity[i, 1])){
activity[i, 1] <- mean.steps[activity[1, 2], 2]
}
}
activity
for (i in 1:nrow(activity)) {
if(is.na(activity[i, 1])){
activity[i, 1] <- mean.steps[activity[i, 2], 2]
}
}
activity
activity <- read.csv("activity.csv", stringsAsFactors = FALSE)
activity[,2] <- as.Date(activity[,2], "%Y-%m-%d")
str(activity)
for (i in 1:nrow(activity)) {
if(is.na(activity[i, 1])){
activity[i, 1] <- mean.steps[activity[i, 2], 2]
}
}
#Fill the missing value of average steps each day
mean.steps[is.na(mean.steps[,2]),][,2] <- mean(mean.steps[,2], na.rm=TRUE)
activity
mean.steps[activity[1000, 2], 2]
mean.steps[activity[10000, 2], 2]
activity[280, 2]
mean.steps[activity[280, 2], 2]
mean.steps
which(mean.steps[1,]==activity[10, 2])
mean.steps[activity[10, 2]),]
mean.steps[activity[10, 2],]
activity[100, 2]
mean.steps[activity[100, 2],]
mean.steps[mean.steps[1,]==activity[100, 2],]
activity[100, 2]
mean.steps[1,]==activity[100, 2]
mean.steps[mean.steps[1,]==activity[100, 2],]
mean.steps[which(mean.steps[1,]==activity[100, 2]),]
mean.steps[which(mean.steps[1,]==activity[100, 2]),][, 2]
mean.steps[which(mean.steps[1,]==activity[100, 2]),2]
}
mean.steps[which(mean.steps[1,]==activity[100, 2]),2]
activity <- read.csv("activity.csv", stringsAsFactors = FALSE)
activity[,2] <- as.Date(activity[,2], "%Y-%m-%d")
for (i in 1:nrow(activity)) {
if(is.na(activity[i, 1])){
activity[i, 1] <- mean.steps[which(mean.steps[1,]==activity[i, 2]), 2]
}
}
activity
for (i in 1:nrow(activity)) {
if(is.na(activity[i, 1])){
activity[i, 1] <- mean.steps[which(mean.steps[1,]==activity[i, 2]), 2]
}
}
for (i in 1:nrow(activity)) {
if(is.na(activity[i, 1])){
activity[i, 1] <- mean.steps[which(mean.steps[1,]=activity[i, 2]), 2]
head(activity)
